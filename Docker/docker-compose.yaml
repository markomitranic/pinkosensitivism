version: "3.7"

services:

  nginx:
    container_name: pinko_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
      target: prod
    restart: always
    command: [nginx-debug, '-g', 'daemon off;']
    volumes:
      - ./../src/:/usr/share/nginx/pinko:delegated
    ports:
      - ${HTTPS_PORT}:443
      - ${HTTP_PORT}:80
    depends_on:
      - php
    networks:
      - pinko

  php:
    container_name: pinko_php
    build:
      context: ./php
      dockerfile: Dockerfile
      target: prod
    restart: always
    volumes:
      - ./../src/:/usr/share/nginx/pinko:delegated
    networks:
      - pinko

  mysql:
    container_name: pinko_mysql
    build:
      context: ./mysql
      dockerfile: Dockerfile
      target: prod
    restart: always
    volumes:
      - ./mysql/datastore:/var/lib/mysql:cached
    ports:
      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
    networks:
      - pinko

  composer:
    container_name: pinko_composer
    build:
      context: ./composer
      dockerfile: Dockerfile
      target: prod
    volumes:
      - ./../src/:/usr/share/nginx/pinko
    user: root
#    entrypoint: /usr/share/nginx/entrypoint.sh
    networks:
      - pinko

  node:
    container_name: pinko_node
    build:
      context: ./node
      dockerfile: Dockerfile
      target: ${ENV}
    user: "node"
    volumes:
      - ./../src:/home/node/app
    working_dir: /home/node/app
    entrypoint: /home/node/entrypoint.sh
    environment:
      - NODE_ENV=${ENV}

networks:
  pinko:
    driver: bridge
